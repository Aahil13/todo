"use strict";const form=document.querySelector(".form"),input=document.querySelector(".input"),todoContainer=document.querySelector(".draggable-list"),todoCounter=document.querySelector(".todo-counter"),activeFilter=document.querySelector(".active"),completedFilter=document.querySelector(".Completed"),allFilter=document.querySelector(".all"),clearCompletedFilter=document.querySelector(".todo-clearer"),toggleBtn=document.querySelector(".toggle img"),header=document.querySelector(".header"),body=document.body,todoFilter=document.querySelector(".todo-box-filter"),filter=document.querySelectorAll(".filter"),sorters=document.querySelector(".sorters");let inputValue,taskArr=[];input.focus();let dragStartIndex,mode="dark";const init=function(){input.classList.add(`${mode}--mode-input`),body.classList.add(`${mode}--mode-body`),todoFilter.classList.add(`${mode}--mode-todo-box-filter`),header.style.backgroundImage=`url(/bg-desktop-${mode}.jpg)`,filter.forEach((e=>e.classList.add(`${mode}--mode-filter`))),toggleBtn.setAttribute("src",`/icon-${mode}.svg`),sorters.classList.add(`${mode}--sorters`)};init();const html=function(e){return`\n    <div class="draggable todo-box ${mode}--mode-todo-box" draggable='true'>\n      <div class="task_left">\n          <input class='checkbox' type="checkbox" id="task" name="task" value="task" />\n          <span class='taskText'>${e}</span>\n      </div>\n      <div class="task_close hidden">\n        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"><path fill="#494C6B" fill-rule="evenodd" d="M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z"/></svg>\n      </div>\n    </div>\n  `},generateNewTask=function(e){e.preventDefault(),inputValue=document.querySelector(".input").value,""!==inputValue&&updateTasks(inputValue)},updateTasks=function(e){todoContainer.insertAdjacentHTML("afterbegin",`\n    <div class="draggable todo-box ${mode}--mode-todo-box" draggable='true'>\n      <div class="task_left">\n          <input class='checkbox' type="checkbox" id="task" name="task" value="task" />\n          <span class='taskText'>${e}</span>\n      </div>\n      <div class="task_close hidden">\n        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"><path fill="#494C6B" fill-rule="evenodd" d="M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z"/></svg>\n      </div>\n    </div>\n  `),taskArr.push(e),input.value="";const t=Array.from(document.querySelectorAll(".todo-box")),o=document.querySelector(".checkbox"),d=document.querySelector(".task_close");t.forEach((e=>{e.addEventListener("mouseover",(()=>{e.lastElementChild.classList.remove("hidden")}))})),t.forEach(((e,t)=>{e.setAttribute("data-index",t)})),o.addEventListener("change",(e=>{e.target.checked&&(e.target.nextElementSibling.style.textDecoration="line-through",e.target.closest(".todo-box").classList.add("checked"),d.addEventListener("click",(e=>{d.closest(".todo-box").remove();const t=Array.from(document.querySelectorAll(".todo-box"));taskCounter(t)})))})),taskCounter(t),allBtn(t),activeBtn(t),completedBtn(t),clearCompleted(t),addEventListeners(),localStorage.setItem("task",taskArr)},taskCounter=function(e){const t=""+(1===e.length?`${e.length} item left`:`${e.length} items left`);todoCounter.innerHTML=t},removeHiddenHelper=function(e){e.forEach((e=>{e.classList.remove("hidden")}))},allBtn=function(e){allFilter.addEventListener("click",(()=>{removeHiddenHelper(e)}))},activeBtn=function(e){activeFilter.addEventListener("click",(()=>{removeHiddenHelper(e);const t=e.filter((e=>e.classList.contains("checked")));t&&t.forEach((e=>e.classList.add("hidden")))}))},completedBtn=function(e){completedFilter.addEventListener("click",(()=>{removeHiddenHelper(e);e.filter((e=>!e.classList.contains("checked"))).forEach((e=>e.classList.add("hidden")))}))},clearCompleted=function(e){clearCompletedFilter.addEventListener("click",(()=>{removeHiddenHelper(e);e.filter((e=>e.classList.contains("checked")))[0].remove();const t=Array.from(document.querySelectorAll(".todo-box"));taskCounter(t)}))},dragStart=function(){dragStartIndex=+this.closest("div").getAttribute("data-index")},dragEnter=function(){this.classList.add("over")},dragLeave=function(){this.classList.remove("over")},dragOver=function(e){e.preventDefault()},dragDrop=function(){const e=+this.getAttribute("data-index");swapItems(dragStartIndex,e),this.classList.remove("over")};function swapItems(e,t){const o=document.querySelectorAll(".todo-box"),d=o[e],r=o[t];o[e].insertAdjacentElement("afterend",r),o[t].insertAdjacentElement("afterend",d)}const addEventListeners=function(){const e=document.querySelectorAll(".draggable"),t=document.querySelectorAll(".draggable-list div");e.forEach((e=>{e.addEventListener("dragstart",dragStart)})),t.forEach((e=>{e.addEventListener("dragover",dragOver),e.addEventListener("drop",dragDrop),e.addEventListener("dragenter",dragEnter),e.addEventListener("dragleave",dragLeave)}))};form.addEventListener("submit",generateNewTask),window.addEventListener("load",(()=>{localStorage.getItem("task").split(",").forEach((e=>{updateTasks(e)}))})),toggleBtn.addEventListener("click",(()=>{const e=Array.from(document.querySelectorAll(".todo-box"));e.forEach((e=>e.classList.add(`${mode}--mode-todo-box`))),mode="dark"===mode?"light":"dark",document.body.dataset.mode=mode,init(),e.forEach((e=>e.classList.add(`${mode}--mode-todo-box`)));const t=function(t){input.classList.remove(`${t}--mode-input`),body.classList.remove(`${t}--mode-body`),e.forEach((e=>e.classList.remove(`${t}--mode-todo-box`))),todoFilter.classList.remove(`${t}--mode-todo-box-filter`),filter.forEach((e=>e.classList.remove(`${t}--mode-filter`))),sorters.classList.remove(`${t}--sorters`)};"dark"===document.body.dataset.mode&&(input.focus(),t("light")),"light"===document.body.dataset.mode&&(input.focus(),t("dark"))}));
//# sourceMappingURL=index.30670de0.js.map
