{"mappings":"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","sources":["script.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst form = document.querySelector(\".form\");\r\nconst input = document.querySelector(\".input\");\r\nconst todoContainer = document.querySelector(\".draggable-list\");\r\nconst todoCounter = document.querySelector(\".todo-counter\");\r\nconst activeFilter = document.querySelector(\".active\");\r\nconst completedFilter = document.querySelector(\".Completed\");\r\nconst allFilter = document.querySelector(\".all\");\r\nconst clearCompletedFilter = document.querySelector(\".todo-clearer\");\r\nconst toggleBtn = document.querySelector(\".toggle img\");\r\nconst header = document.querySelector(\".header\");\r\nconst body = document.body;\r\nconst todoFilter = document.querySelector(\".todo-box-filter\");\r\nconst filter = document.querySelectorAll(\".filter\");\r\nconst sorters = document.querySelector(\".sorters\");\r\n\r\nlet inputValue;\r\nlet taskArr = [];\r\ninput.focus();\r\nlet mode = \"dark\";\r\nlet dragStartIndex;\r\n\r\nconst init = function () {\r\n  input.classList.add(`${mode}--mode-input`);\r\n  body.classList.add(`${mode}--mode-body`);\r\n  todoFilter.classList.add(`${mode}--mode-todo-box-filter`);\r\n  header.style.backgroundImage = `url(./images/bg-desktop-${mode}.jpg)`;\r\n  filter.forEach((e) => e.classList.add(`${mode}--mode-filter`));\r\n  toggleBtn.setAttribute(\"src\", `images/icon-${mode}.svg`);\r\n  sorters.classList.add(`${mode}--sorters`);\r\n};\r\ninit();\r\n\r\nconst html = function (inputValue) {\r\n  return `\r\n    <div class=\"draggable todo-box ${mode}--mode-todo-box\" draggable='true'>\r\n      <div class=\"task_left\">\r\n          <input class='checkbox' type=\"checkbox\" id=\"task\" name=\"task\" value=\"task\" />\r\n          <span class='taskText'>${inputValue}</span>\r\n      </div>\r\n      <div class=\"task_close hidden\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\"><path fill=\"#494C6B\" fill-rule=\"evenodd\" d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"/></svg>\r\n      </div>\r\n    </div>\r\n  `;\r\n};\r\n\r\nconst generateNewTask = function (e) {\r\n  e.preventDefault();\r\n  inputValue = document.querySelector(\".input\").value;\r\n  if (inputValue === \"\") return;\r\n  updateTasks(inputValue);\r\n};\r\n\r\nconst updateTasks = function (arr) {\r\n  todoContainer.insertAdjacentHTML(\"afterbegin\", html(arr));\r\n  taskArr.push(arr);\r\n  input.value = \"\";\r\n\r\n  //variables of all elements in the todoBox\r\n  const items = Array.from(document.querySelectorAll(\".todo-box\"));\r\n  const checkbox = document.querySelector(\".checkbox\");\r\n  const closeBtn = document.querySelector(\".task_close\");\r\n\r\n  //reveals the close btn on hover\r\n  items.forEach((el) => {\r\n    el.addEventListener(\"mouseover\", () => {\r\n      el.lastElementChild.classList.remove(\"hidden\");\r\n    });\r\n  });\r\n\r\n  //setting attributes to items\r\n  items.forEach((item, index) => {\r\n    item.setAttribute(\"data-index\", index);\r\n  });\r\n\r\n  //removes the task when chacked completed\r\n  checkbox.addEventListener(\"change\", (e) => {\r\n    if (!e.target.checked) return;\r\n    e.target.nextElementSibling.style.textDecoration = \"line-through\";\r\n    e.target.closest(\".todo-box\").classList.add(\"checked\");\r\n\r\n    closeBtn.addEventListener(\"click\", (el) => {\r\n      closeBtn.closest(\".todo-box\").remove();\r\n      const item = Array.from(document.querySelectorAll(\".todo-box\"));\r\n      taskCounter(item);\r\n    });\r\n  });\r\n\r\n  //updates the number of tasks\r\n  taskCounter(items);\r\n\r\n  //allBtn\r\n  allBtn(items);\r\n\r\n  //activebtn\r\n  activeBtn(items);\r\n\r\n  //completedBtn\r\n  completedBtn(items);\r\n\r\n  //clearCompleted\r\n  clearCompleted(items);\r\n\r\n  //addEventListeners\r\n  addEventListeners();\r\n\r\n  //setLocalStorage\r\n  localStorage.setItem(\"task\", taskArr);\r\n};\r\n\r\n//this updates the number of tasks on the UI using the number of inputed tasks\r\nconst taskCounter = function (taskArr) {\r\n  const counterText = `${\r\n    taskArr.length === 1\r\n      ? `${taskArr.length} item left`\r\n      : `${taskArr.length} items left`\r\n  }`;\r\n  todoCounter.innerHTML = counterText;\r\n};\r\n\r\n//a helper function responsilbe for removing the class of hidden\r\nconst removeHiddenHelper = function (items) {\r\n  items.forEach((e) => {\r\n    e.classList.remove(\"hidden\");\r\n  });\r\n};\r\n\r\n//handler for the all button\r\nconst allBtn = function (items) {\r\n  allFilter.addEventListener(\"click\", () => {\r\n    removeHiddenHelper(items);\r\n  });\r\n};\r\n\r\n//handler for the active button\r\nconst activeBtn = function (items) {\r\n  activeFilter.addEventListener(\"click\", () => {\r\n    removeHiddenHelper(items);\r\n\r\n    const activeElements = items.filter((el) =>\r\n      el.classList.contains(\"checked\")\r\n    );\r\n    if (!activeElements) return;\r\n    activeElements.forEach((e) => e.classList.add(\"hidden\"));\r\n  });\r\n};\r\n\r\n//handler for the completed button\r\nconst completedBtn = function (items) {\r\n  completedFilter.addEventListener(\"click\", () => {\r\n    removeHiddenHelper(items);\r\n    const completedElements = items.filter(\r\n      (el) => !el.classList.contains(\"checked\")\r\n    );\r\n    completedElements.forEach((e) => e.classList.add(\"hidden\"));\r\n  });\r\n};\r\n\r\n//handler for the clear completed button\r\nconst clearCompleted = function (items) {\r\n  clearCompletedFilter.addEventListener(\"click\", () => {\r\n    removeHiddenHelper(items);\r\n    const completedElements = items.filter((el) =>\r\n      el.classList.contains(\"checked\")\r\n    );\r\n    completedElements[0].remove();\r\n    const item = Array.from(document.querySelectorAll(\".todo-box\"));\r\n    taskCounter(item);\r\n  });\r\n};\r\n\r\n\r\n//drag and drop functionality\r\nconst dragStart = function () {\r\n  // console.log('Event: ', 'dragstart');\r\n  dragStartIndex = +this.closest(\"div\").getAttribute(\"data-index\");\r\n};\r\nconst dragEnter = function () {\r\n  // console.log('Event: ', 'dragenter');\r\n  this.classList.add(\"over\");\r\n};\r\nconst dragLeave = function () {\r\n  // console.log('Event: ', 'dragleave');\r\n  this.classList.remove(\"over\");\r\n};\r\nconst dragOver = function (e) {\r\n  // console.log('Event: ', 'dragover');\r\n  e.preventDefault();\r\n};\r\nconst dragDrop = function () {\r\n  // console.log('Event: ', 'drop');\r\n  const dragEndIndex = +this.getAttribute(\"data-index\");\r\n  swapItems(dragStartIndex, dragEndIndex);\r\n\r\n  this.classList.remove(\"over\");\r\n};\r\n\r\nfunction swapItems(fromIndex, toIndex) {\r\n  const item = document.querySelectorAll(\".todo-box\");\r\n\r\n  const taskOne = item[fromIndex];\r\n  const taskTwo = item[toIndex];\r\n\r\n  item[fromIndex].insertAdjacentElement(\"afterend\", taskTwo);\r\n  item[toIndex].insertAdjacentElement(\"afterend\", taskOne);\r\n}\r\n\r\nconst addEventListeners = function () {\r\n  const draggables = document.querySelectorAll(\".draggable\");\r\n  const dragListItems = document.querySelectorAll(\".draggable-list div\");\r\n\r\n  draggables.forEach((draggable) => {\r\n    draggable.addEventListener(\"dragstart\", dragStart);\r\n  });\r\n  dragListItems.forEach((item) => {\r\n    item.addEventListener(\"dragover\", dragOver);\r\n    item.addEventListener(\"drop\", dragDrop);\r\n    item.addEventListener(\"dragenter\", dragEnter);\r\n    item.addEventListener(\"dragleave\", dragLeave);\r\n  });\r\n};\r\n\r\nform.addEventListener(\"submit\", generateNewTask);\r\n\r\n//Rendering previous tasks\r\nwindow.addEventListener(\"load\", () => {\r\n  const tasks = localStorage.getItem(\"task\").split(\",\");\r\n  tasks.forEach((e) => {\r\n    updateTasks(e);\r\n  });\r\n});\r\n\r\n//swiching modes\r\ntoggleBtn.addEventListener(\"click\", () => {\r\n  const todo = Array.from(document.querySelectorAll(\".todo-box\"));\r\n  todo.forEach((e) => e.classList.add(`${mode}--mode-todo-box`));\r\n\r\n  mode = mode === \"dark\" ? \"light\" : \"dark\";\r\n  document.body.dataset.mode = mode;\r\n  init();\r\n  todo.forEach((e) => e.classList.add(`${mode}--mode-todo-box`));\r\n\r\n  const switchMode = function (mode) {\r\n    input.classList.remove(`${mode}--mode-input`);\r\n    body.classList.remove(`${mode}--mode-body`);\r\n    todo.forEach((e) => e.classList.remove(`${mode}--mode-todo-box`));\r\n    todoFilter.classList.remove(`${mode}--mode-todo-box-filter`);\r\n    filter.forEach((e) => e.classList.remove(`${mode}--mode-filter`));\r\n    sorters.classList.remove(`${mode}--sorters`);\r\n  };\r\n\r\n  if (document.body.dataset.mode === \"dark\") {\r\n    input.focus();\r\n    switchMode(\"light\");\r\n  }\r\n\r\n  if (document.body.dataset.mode === \"light\") {\r\n    input.focus();\r\n    switchMode(\"dark\");\r\n  }\r\n});\r\n"],"names":["form","document","querySelector","input","todoContainer","todoCounter","activeFilter","completedFilter","allFilter","clearCompletedFilter","toggleBtn","header","body","todoFilter","filter","querySelectorAll","sorters","inputValue","taskArr","focus","dragStartIndex","mode","init","classList","add","style","backgroundImage","forEach","e","setAttribute","html","inputValue1","generateNewTask","preventDefault","value","updateTasks","arr","insertAdjacentHTML","push","items","Array","from","checkbox","closeBtn","el","addEventListener","lastElementChild","remove","item","index","target","checked","nextElementSibling","textDecoration","closest","taskCounter","allBtn","activeBtn","completedBtn","clearCompleted","addEventListeners","setItem","taskArr1","counterText","length","innerHTML","removeHiddenHelper","activeElements","contains","dragStart","this","getAttribute","dragEnter","dragLeave","dragOver","dragDrop","dragEndIndex","swapItems","fromIndex","toIndex","taskOne","taskTwo","insertAdjacentElement","draggables","dragListItems","draggable","localStorage","getItem","split","todo","dataset","switchMode","mode1"],"version":3,"file":"index.30670de0.js.map"}